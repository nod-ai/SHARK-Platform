# Copyright 2024 Advanced Micro Devices, Inc.
#
# Licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

name: SGLang Llama Integration Tests

on:
  workflow_dispatch:
  schedule:
    # Run periodically, every 4 hours. This is ran periodically with the
    # intent of catching regressions early, and allowing for those
    # regressions to be easily triaged to a small subset of commits.
    - cron: '0 */4 * * *'

concurrency:
  # A PR number if a pull request and otherwise the commit hash. This cancels
  # queued and in-progress runs for the same PR (presubmit) or commit
  # (postsubmit). The workflow name is prepended to avoid conflicts between
  # different workflows.
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

jobs:
  sglang_bench_serve:
    name: "SGLang Integration Tests"
    strategy:
      matrix:
        version: [3.11]
      fail-fast: false
    runs-on: llama-mi300x-4
    defaults:
      run:
        shell: bash
    env:
      PIP_CACHE_DIR: "${{ github.workspace }}/.pip-cache"
    steps:
      - name: Get Current Date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: "Setting up Python"
        id: setup_python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: ${{matrix.version}}

      - name: "Checkout Code"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Cache Pip Packages
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
        id: cache-pip
        with:
          path: ${{ env.PIP_CACHE_DIR }}
          key: pip-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('*requirements.txt') }}

      - name: Install pip deps
        run: |
          python -m pip install --no-compile --upgrade pip
          # Note: We install in three steps in order to satisfy requirements
          # from non default locations first. Installing the PyTorch CPU
          # wheels saves multiple minutes and a lot of bandwidth on runner setup.
          pip install --no-compile -r pytorch-cpu-requirements.txt
          pip install --no-compile -f https://iree.dev/pip-release-links.html --src deps \
            -e "git+https://github.com/iree-org/iree-turbine.git#egg=iree-turbine"
          pip install --no-compile -r requirements.txt -e sharktank/ shortfin/

          # Use newest possible releases to be able to track commits that may
          # cause errors.
          pip install -f https://iree.dev/pip-release-links.html --upgrade \
            iree-base-compiler \
            iree-base-runtime \
            "numpy<2.0"

      - name: Install SGLang
        run: pip install "git+https://github.com/nod-ai/sglang.git#subdirectory=python"

      - name: Install sentence_transformers
        run: pip install sentence_transformers

      - name: Run Integration Tests
        run: pytest -v app_tests/integration_tests/llm/sglang --log-cli-level=INFO
