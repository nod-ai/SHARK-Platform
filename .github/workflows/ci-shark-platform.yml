# Copyright 2024 Advanced Micro Devices, Inc.
#
# Licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

name: CI - shark-platform

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

concurrency:
  # A PR number if a pull request and otherwise the commit hash. This cancels
  # queued and in-progress runs for the same PR (presubmit) or commit
  # (postsubmit). The workflow name is prepended to avoid conflicts between
  # different workflows.
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

jobs:
  test_shortfin_llm_server:
    name: "Integration Tests - Shortfin LLM Server"
    strategy:
      matrix:
        version: [3.11]
      fail-fast: false
    runs-on: nodai-amdgpu-mi250-x86-64
    defaults:
      run:
        shell: bash
    env:
      PIP_CACHE_DIR: "${{ github.workspace }}/.pip-cache"
    steps:
      - name: "Setting up Python"
        id: setup_python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: ${{matrix.version}}

      - name: "Checkout Code"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Cache Pip Packages
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
        id: cache-pip
        with:
          path: ${{ env.PIP_CACHE_DIR }}
          key: pip-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('*requirements.txt') }}

      - name: Upgrade pip
        id: upgrade_pip
        run: |
          echo "::group::Upgrade pip"
          python -m pip install --no-compile --upgrade pip
          echo "::endgroup::"

      - name: Install PyTorch CPU
        id: install_pytorch
        run: |
          echo "::group::Install PyTorch CPU requirements"
          pip install --no-compile -r pytorch-cpu-requirements.txt
          echo "::endgroup::"

      - name: Install IREE Turbine
        id: install_iree_turbine
        run: |
          echo "::group::Install IREE Turbine"
          pip install --no-compile -f https://iree.dev/pip-release-links.html --src deps \
            -e "git+https://github.com/iree-org/iree-turbine.git#egg=iree-turbine"
          echo "::endgroup::"

      - name: Install IREE Dependencies
        id: install_iree_deps
        run: |
          echo "::group::Install IREE dependencies"
          pip install -f https://iree.dev/pip-release-links.html --upgrade \
            iree-base-compiler \
            iree-base-runtime \
            "numpy<2.0"
          echo "::endgroup::"


      - name: Install Main Requirements
        id: install_main_reqs
        run: |
          echo "::group::Install main requirements"
          pip install --no-compile -r requirements.txt
          echo "::endgroup::"

      - name: Install Sharktank
        id: install_sharktank
        run: |
          echo "::group::Install Sharktank"
          pip install --no-compile -e sharktank/
          echo "::endgroup::"

      - name: Install Shortfin
        id: install_shortfin
        run: |
          echo "::group::Install Shortfin"
          pip install --no-compile -e shortfin/
          echo "::endgroup::"

      - name: Run LLM Integration Tests
        run: pytest -v build_tools/integration_tests/llm --log-cli-level=INFO
